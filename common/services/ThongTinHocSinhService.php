<?php
namespace common\services;
/**
* This is the template for generating CRUD service class of the specified model.
*/

use backend\models\search\ThongTinHocSinhSearch;
use common\models\HocSinh;
use common\models\PhongO;
use common\models\ThongTinHocSinh;
use common\models\User;
use yii\helpers\ArrayHelper;
use yii\helpers\VarDumper;
use yii\web\NotFoundHttpException;

class ThongTinHocSinhService extends Service implements ThongTinHocSinhServiceInterface{
    public function getSearchModel(array $query=[], array $options=[])
    {
         return new  ThongTinHocSinhSearch();
    }

    public function getModel($id, array $options = [])
    {
        return ThongTinHocSinh::findOne($id);
    }

    public function newModel(array $options = [])
    {
        $model = new ThongTinHocSinh($options);
        $model->loadDefaultValues();
        return $model;
    }
    public function update($id, array $postData, array $options = [])
    {
        $model = $this->getModel($id, $options);
        if( empty($model) ){
            throw new NotFoundHttpException("Record " . $id . " not exists");
        }
        if( $model->load($postData) && $model->save() ){

            $model->user->email = $model->email;
            if($model->password != ""){
                $model->user->password = $model->password;
            }
            $phuHuynh = User::findOne($model->phu_huynh_user_id);
            if($phuHuynh!= null){
                $phuHuynh->email = $model->emailPH;
                if($model->passwordPH != ""){
                    $phuHuynh->password = $model->passwordPH;
                }
                $phuHuynh->save();
            }
            if($model->user->save()){

                return true;
            }else{
                VarDumper::dump($model,10,true);
                exit();
                return $model;
            }

        }
        return $model;
    }

    public function create(array $postData, array $options = [])
    {
        $model = $this->newModel($options);
        $model->load($postData);
//        VarDumper::dump($model ,10,true);
//        exit();
        $db = \Yii::$app->db;
        $transaction = $db->beginTransaction();

        try
        {
            if($model->password == ""){
                $model->addError("password","Vui lòng nhập password");
            }
            if($model->passwordPH == ""){
                $model->addError("passwordPH","Vui lòng nhập password");
            }
            if( $model->load($postData) && $model->save() )
            {
//            return true;
//            /** @var LopServiceInterface $lopService */
//            /** @var User $modelUser */
//            $userSevice =  \Yii::$app->get(UserServiceInterface::ServiceName);
                $modelUser = new User();
                $modelUserPH = new User();

                if(User::findOne(['email' => $model->email]) !== null){
                    $model->addError('email', 'Email này đã tồn tại trong hệ thống.');
                    return $model;
                }
                if(User::findOne(['email' => $model->emailPH]) !== null){
                    $model->addError('email', 'Email này đã tồn tại trong hệ thống.');
                    return $model;
                }

                $modelUser->load(['User'=>[
                    'username' => str_replace('{{ID}}',$model->id, $model->username),
                    'password' => $model->password,
                    'email' => $model->email,
                    'access_token'  => 'A',
                    'created_at' => time(),
                    'updated_at' => time(),
                ]]);
                $modelUserPH->load(['User'=>[
                    'username' => str_replace('{{ID}}',$model->id, $model->usernamePH),
                    'password' => $model->passwordPH,
                    'email' => $model->emailPH,
                    'access_token'  => 'A',
                    'created_at' => time(),
                    'updated_at' => time(),
                ]]);

//            $modelUser->load();
                if ($modelUser->save() && $modelUserPH->save()) {
                    $model->user_id = $modelUser->id;
                    $model->phu_huynh_user_id = $modelUserPH->id;
//                    VarDumper::dump($model,10,true);
//                    exit();
                    if ($model->save(false))
                    {
                        $transaction->commit();
                        return true;
                    }
                    else{
                        VarDumper::dump($model->getErrors());
                        exit();
                    }
                }else{
                    VarDumper::dump($modelUser->getErrors());
                    exit();
                }
                VarDumper::dump($modelUserPH->getErrors());
                exit();
                return $model;
            }


            return $model; // TODO: Change the autogenerated stub
        }catch (\Exception $e){
            $transaction->rollBack(); // ❌ Nếu có lỗi, rollback toàn bộ
            throw $e; // hoặc xử lý log lỗi tại đây
        }

    }

    public function getAllNameHocSinh(array $options=[])
    {
        $list = ArrayHelper::map(
            ThongTinHocSinh::find()
                ->select(['id', 'cccd', 'ho_va_ten'])
                ->where($options)
                ->asArray()
                ->all(),
            'id',
            function ($row) {
                return $row['cccd'] . ' - ' . $row['ho_va_ten'];
            });
        return $list;
    }
}
